---
#
# edX Configuration
#
# github:     https://github.com/edx/configuration
# wiki:       https://openedx.atlassian.net/wiki/display/OpenOPS
# code style: https://openedx.atlassian.net/wiki/display/OpenOPS/Ansible+Code+Conventions
# license:    https://github.com/edx/configuration/blob/master/LICENSE.TXT
#
##
# Defaults for common variables for video_pipeline and video_worker roles
#

video_common_veda_url_root: "http://127.0.0.1:8555"
video_common_veda_static_root: !!null
video_common_veda_django_secret_key: !!null
video_common_veda_mysql_db_name: !!null
video_common_veda_mysql_host: !!null
video_common_veda_mysql_user: !!null
video_common_veda_mysql_password: !!null
video_common_service_name: !!null

# Used to automatically configure OAuth2 Client
VIDEO_COMMON_SOCIAL_AUTH_EDX_OIDC_KEY: "pipeline-key"
VIDEO_COMMON_SOCIAL_AUTH_EDX_OIDC_SECRET: "pipeline-secret"

# video pipeline config overrides

VIDEO_COMMON_EDX_CLOUDFRONT_PREFIX: "SET-ME-PLEASE"
VIDEO_COMMON_EDX_S3_INGEST_PREFIX: "ingest/"
VIDEO_COMMON_EDX_S3_INGEST_BUCKET: "SET-ME-PLEASE"
VIDEO_COMMON_EDX_S3_ENDPOINT_BUCKET: "SET-ME-PLEASE"
VIDEO_COMMON_VEDA_S3_UPLOAD_BUCKET: "SET-ME-PLEASE"
VIDEO_COMMON_VEDA_UPLOAD_BUCKET: "SET-ME-PLEASE"
VIDEO_COMMON_VEDA_S3_HOTSTORE_BUCKET: "SET-ME-PLEASE"
VIDEO_COMMON_VEDA_DELIVERABLE_BUCKET: "SET-ME-PLEASE"

VIDEO_COMMON_VEDA_BASE_URL: "{{ video_common_veda_url_root }}"
VIDEO_COMMON_VEDA_ACCESS_KEY_ID: "SET-ME-PLEASE"
VIDEO_COMMON_VEDA_SECRET_ACCESS_KEY: "SET-ME-PLEASE"

VIDEO_COMMON_AWS_VIDEO_IMAGES_BUCKET: "SET-ME-PLEASE"
VIDEO_COMMON_AWS_VIDEO_TRANSCRIPTS_BUCKET: "SET-ME-PLEASE"

VIDEO_COMMON_ADMIN_EMAIL: "veda@example.com"
VIDEO_COMMON_VEDA_NOREPLY_EMAIL: "veda-noreply@example.com"

VIDEO_COMMON_CIELO24_API_ENVIRONMENT: "sandbox"
VIDEO_COMMON_TRANSCRIPT_PROVIDER_REQUEST_TOKEN: "SET-ME-TO-A-UNIQUE-LONG-RANDOM-STRING"

VIDEO_COMMON_VEDA_API_URL: "{{ VIDEO_COMMON_VEDA_BASE_URL }}/api"
VIDEO_COMMON_VEDA_OAUTH_URL: "{{ VIDEO_COMMON_VEDA_BASE_URL }}/veda_auth"
VIDEO_COMMON_VEDA_OAUTH_TOKEN_URL: "{{ VIDEO_COMMON_VEDA_BASE_URL }}/o/token"
VIDEO_COMMON_VEDA_OAUTH_CLIENT_ID: "veda-client-id"
VIDEO_COMMON_VEDA_OAUTH_CLIENT_SECRET: "veda-client-secret"
VIDEO_COMMON_VEDA_OAUTH_CLIENT_NAME: "video-pipeline"

VIDEO_COMMON_VAL_BASE_URL: "http://127.0.0.1:8010"
VIDEO_COMMON_VAL_API_URL: "{{ VIDEO_COMMON_VAL_BASE_URL }}/api/val/v0/videos"
VIDEO_COMMON_VAL_TOKEN_URL: "{{ VIDEO_COMMON_VAL_BASE_URL }}/oauth2/access_token"
VIDEO_COMMON_VAL_VIDEO_IMAGES_URL: "{{ VIDEO_COMMON_VAL_BASE_URL }}/api/val/v0/videos/video-images/update/"
VIDEO_COMMON_VAL_CLIENT_ID: "{{ VIDEO_COMMON_SOCIAL_AUTH_EDX_OIDC_KEY }}"
VIDEO_COMMON_VAL_SECRET_KEY: "{{ VIDEO_COMMON_SOCIAL_AUTH_EDX_OIDC_SECRET }}"
VIDEO_COMMON_VAL_USERNAME: "staff"
VIDEO_COMMON_VAL_PASSWORD: "edx"
VIDEO_COMMON_VAL_TRANSCRIPT_CREATE_URL: "{{ VIDEO_COMMON_VAL_BASE_URL }}/api/val/v0/videos/video-transcripts/create/"
VIDEO_COMMON_VAL_VIDEO_TRANSCRIPT_STATUS_URL: "{{ VIDEO_COMMON_VAL_BASE_URL }}/api/val/v0/videos/status/"

VIDEO_COMMON_RABBITMQ_BROKER: "localhost"
VIDEO_COMMON_RABBITMQ_PASS: "pipeline"
VIDEO_COMMON_RABBITMQ_USER: "pipeline"

VIDEO_COMMON_SG_SERVER_PATH: "SET-ME-PLEASE"
VIDEO_COMMON_SG_SCRIPT_NAME: "SET-ME-PLEASE"
VIDEO_COMMON_SG_SCRIPT_KEY: "SET-ME-PLEASE"

VIDEO_COMMON_THREEPLAY_FTPHOST: "SET-ME-PLEASE"

VIDEO_COMMON_XUETANG_API_URL: "SET-ME-PLEASE"
VIDEO_COMMON_XUETANG_API_SHARED_SECRET: "SET-ME-PLEASE"

VIDEO_COMMON_HOST_ENVIRONMENT: "sandbox"

# video pipeline config

VIDEO_COMMON_CONFIG:
  DATABASES:
      default:
          ENGINE: 'django.db.backends.mysql'
          NAME: "{{ video_common_veda_mysql_db_name }}"
          USER: "{{ video_common_veda_mysql_user }}"
          PASSWORD: "{{ video_common_veda_mysql_password }}"
          HOST: "{{ video_common_veda_mysql_host }}"
          PORT: 3306

  django_secret_key: "{{ video_common_veda_django_secret_key }}"

  # Django DEBUG global
  debug: false

  # django staticfile settings
  STATIC_ROOT_PATH: "{{ video_common_veda_static_root }}"

  # ---
  # AWS Buckets, Prefixes
  # ---
  # Studio/Platform
  edx_s3_ingest_prefix: "{{ VIDEO_COMMON_EDX_S3_INGEST_PREFIX }}"
  edx_s3_ingest_bucket: "{{ VIDEO_COMMON_EDX_S3_INGEST_BUCKET }}"
  edx_s3_endpoint_bucket: "{{ VIDEO_COMMON_EDX_S3_ENDPOINT_BUCKET }}"

  # CF
  edx_cloudfront_prefix: "{{ VIDEO_COMMON_EDX_CLOUDFRONT_PREFIX }}"

  # Images
  aws_video_images_bucket: "{{ VIDEO_COMMON_AWS_VIDEO_IMAGES_BUCKET }}"
  aws_video_images_prefix: "video-images/"


  # VEDA Internal
  veda_s3_upload_bucket: "{{ VIDEO_COMMON_VEDA_S3_UPLOAD_BUCKET }}"
  veda_s3_hotstore_bucket: "{{ VIDEO_COMMON_VEDA_S3_HOTSTORE_BUCKET }}"
  veda_deliverable_bucket: "{{ VIDEO_COMMON_VEDA_DELIVERABLE_BUCKET }}"
  veda_upload_bucket: "{{ VIDEO_COMMON_VEDA_UPLOAD_BUCKET }}"
  # Settings
  multi_upload_barrier: 2000000000
  veda_base_url: "{{ VIDEO_COMMON_VEDA_BASE_URL }}"
  s3_base_url: https://s3.amazonaws.com


  # Transcripts
  aws_video_transcripts_bucket: "{{ VIDEO_COMMON_AWS_VIDEO_TRANSCRIPTS_BUCKET }}"
  aws_video_transcripts_prefix: video-transcripts/

  # cielo24 api urls
  cielo24_api_base_url: 'https://{{ VIDEO_COMMON_CIELO24_API_ENVIRONMENT }}.cielo24.com/api'

  # 3playmedia api urls
  three_play_api_base_url: https://api.3playmedia.com/
  three_play_api_transcript_url: https://static.3playmedia.com/

  # a token identifying a valid request from transcript provider
  transcript_provider_request_token: "{{ VIDEO_COMMON_TRANSCRIPT_PROVIDER_REQUEST_TOKEN }}"

  # Ingest Secret
  veda_secret_access_key: "{{ VIDEO_COMMON_VEDA_SECRET_ACCESS_KEY }}"
  veda_access_key_id: "{{ VIDEO_COMMON_VEDA_ACCESS_KEY_ID }}"

  # ---
  # email vars
  # ---
  veda_noreply_email: "{{ VIDEO_COMMON_VEDA_NOREPLY_EMAIL }}"
  admin_email: "{{ VIDEO_COMMON_ADMIN_EMAIL }}"

  # ---
  # VEDA API
  # ---
  ## VEDA API Auth
  veda_api_url: "{{ VIDEO_COMMON_VEDA_API_URL }}"
  veda_auth_url: "{{ VIDEO_COMMON_VEDA_OAUTH_URL }}"
  veda_client_id: "{{ VIDEO_COMMON_VEDA_OAUTH_CLIENT_ID }}"
  veda_secret_key: "{{ VIDEO_COMMON_VEDA_OAUTH_CLIENT_SECRET }}"
  veda_token_url: "{{ VIDEO_COMMON_VEDA_OAUTH_TOKEN_URL }}"

  # ---
  # VAL
  # ---
  val_api_url: "{{ VIDEO_COMMON_VAL_API_URL }}"
  val_token_url: "{{ VIDEO_COMMON_VAL_TOKEN_URL }}"
  val_video_images_url: "{{ VIDEO_COMMON_VAL_VIDEO_IMAGES_URL }}"
  # Credentials
  val_client_id: "{{ VIDEO_COMMON_VAL_CLIENT_ID }}"
  val_secret_key: "{{ VIDEO_COMMON_VAL_SECRET_KEY }}"
  val_password: "{{ VIDEO_COMMON_VAL_PASSWORD }}"
  val_username: "{{ VIDEO_COMMON_VAL_USERNAME }}"
  val_transcript_create_url: "{{ VIDEO_COMMON_VAL_TRANSCRIPT_CREATE_URL }}"
  val_video_transcript_status_url: "{{ VIDEO_COMMON_VAL_VIDEO_TRANSCRIPT_STATUS_URL }}"

  # ---
  # Celery Info
  # ---
  celery_app_name: "veda_{{ VIDEO_COMMON_HOST_ENVIRONMENT }}"
  # can do multiple queues like so: foo,bar,baz
  main_celery_queue: encode_worker
  celery_receiver_queue: encode_worker
  largefile_celery_queue: large_encode_worker
  celery_stat_queue: transcode_stat
  largefile_queue_barrier: 1000000000
  celery_threads: 1

  rabbitmq_broker: "{{ VIDEO_COMMON_RABBITMQ_BROKER }}"
  rabbitmq_pass: "{{ VIDEO_COMMON_RABBITMQ_PASS }}"
  rabbitmq_user: "{{ VIDEO_COMMON_RABBITMQ_USER }}"

  # ---
  # Shotgun Variables (internal mediateam)
  # ---
  sg_server_path: "{{ VIDEO_COMMON_SG_SERVER_PATH }}"
  sg_script_name: "{{ VIDEO_COMMON_SG_SCRIPT_NAME }}"
  sg_script_key: "{{ VIDEO_COMMON_SG_SCRIPT_KEY }}"

  # ---
  # Endpoints
  # ---
  threeplay_ftphost: "{{ VIDEO_COMMON_THREEPLAY_FTPHOST }}"
  xuetang_api_url: "{{ VIDEO_COMMON_XUETANG_API_URL }}"
  xuetang_api_shared_secret: "{{ VIDEO_COMMON_XUETANG_API_SHARED_SECRET }}"

  ## Encoding Config
  ffmpeg_compiled: "ffmpeg"
  ffprobe_compiled: "ffprobe"
  target_aspect_ratio: 1.7777778

  # ----------
  ##---
  # This is a list of encodes and their respective course
  # boolean matches
  encode_dict:
      review_proc:
          - review
      mobile_override:
          - override
      s3_proc:
          - mobile_high
          - mobile_low
          - audio_mp3
          - desktop_webm
          - desktop_mp4
          - hls

      yt_proc:
          - youtube

  ##---
  # This is a list of encode profiles and their val profile matches
  # boolean matches
  val_profile_dict:
      mobile_low:
          - mobile_low

      desktop_mp4:
          - desktop_mp4

      override:
          - desktop_mp4
          - mobile_low
          - mobile_high

      mobile_high:
          - mobile_high

      audio_mp3:
          - audio_mp3

      desktop_webm:
          - desktop_webm

      youtube:
          - youtube
      review:
      hls:
          - hls

  #--
  # Heal settings
  heal_start: 1
  heal_end: 144
