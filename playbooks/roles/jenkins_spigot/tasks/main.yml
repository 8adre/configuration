---
- name: Install jenkins specific system packages
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items: "{{ jenkins_debian_pkgs }}"
  tags:
    - jenkins
    - install
    - install:system-requirements

- name: Install jenkins extra system packages
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items: "{{ JENKINS_EXTRA_PKGS }}"
  tags:
    - jenkins
    - install
    - install:system-requirements

- name: Create jenkins group
  group:
    name: "{{ jenkins_group }}"
    state: present
  tags:
    - install
    - install:system-requirements

- name: Add the jenkins user to the group
  user:
    name: "{{ jenkins_user }}"
    append: yes
    groups: "{{ jenkins_group }}"
  tags:
     - install                      
     - install:system-requirements

# Should be resolved in the next release, but until then we need to do this
# https://issues.jenkins-ci.org/browse/JENKINS-20407
- name: Workaround for JENKINS-20407
  file:
    path: "/var/run/jenkins"
    state: directory
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
  tags:
    - install
    - install:system-requirements

# TODO in Ansible 2.1 we can do apt: deb="{{ jenkins_deb_url }}"
- name: download Jenkins package
  get_url: url="{{ jenkins_deb_url }}" dest="/tmp/{{ jenkins_deb }}"
  tags:
    - install
    - install:app-requirements

- name: install Jenkins package
  apt:
    deb: "/tmp/{{ jenkins_deb }}"
  tags:
    - install
    - install:app-requirements

- name: Stop Jenkins
  service:
    name: jenkins
    state: stopped
  tags:
    - manage
    - manage:stop

- name: Set jvm args
  lineinfile:
    backup: yes
    dest: /etc/default/jenkins
    regexp: '^JAVA_ARGS='
    line: 'JAVA_ARGS="{{ jenkins_jvm_args }}"'
  tags:
    - java
    - jenkins
    - install
    - install:app-configuration

- name: Set jenkins home
  lineinfile:
    backup: yes
    dest: /etc/default/jenkins
    regexp: '^JENKINS_HOME='
    line: 'JENKINS_HOME="{{ jenkins_home }}"'
  tags:
    - java
    - jenkins
    - install
    - install:app-configuration

# Move /var/lib/jenkins to Jenkins home (on the EBS)
- name: Move /var/lib/jenkins
  command: "mv /var/lib/jenkins {{ jenkins_home }}"
  args:
    creates: "{{ jenkins_home }}"
  tags:
    - install
    - install:base

- name: Set owner for Jenkins home
  file:
    path: "{{ jenkins_home }}"
    recurse: yes
    state: directory
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
  tags:
    - install
    - install:app-requirements  

# Symlink /var/lib/jenkins to {{ COMMON_DATA_DIR }}/jenkins
# since Jenkins will expect its files to be in /var/lib/jenkins
- name: Symlink /var/lib/jenkins
  file:
    src: "{{ jenkins_home }}"
    dest: /var/lib/jenkins
    state: link
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
  tags:
    - install
    - install:base

# Using this instead of the user module because the user module
# fails if the directory exists.
- name: Set home directory for jenkins user
  shell: "usermod -d {{ jenkins_home }} {{ jenkins_user }}"
  tags:
    - install
    - install:base

# Plugins that are bundled with Jenkins are "pinned".
# Jenkins will overwrite updated plugins with its built-in version
# unless we create a ".pinned" file for the plugin.
# See https://issues.jenkins-ci.org/browse/JENKINS-13129
- name: Create plugin pin files
  command: "touch {{ jenkins_home }}/plugins/{{ item }}.jpi.pinned"
  args:
    creates: "{{ jenkins_home }}/plugins/{{ item }}.jpi.pinned"
  with_items: "{{ jenkins_bundled_plugins }}"
  tags:
    - install
    - install:base

- name: Setup nginix vhost
  template:
    src: "etc/nginx/sites-available/jenkins.j2"
    dest: "/etc/nginx/sites-available/jenkins"
  tags:
    - install
    - install:vhosts

- name: Enable jenkins vhost
  file:
    src: "/etc/nginx/sites-available/jenkins"
    dest: "/etc/nginx/sites-enabled/jenkins"
    state: link
  tags:
    - install
    - install:vhosts

- name: restart Jenkinks
  service:
    name: jenkins
    state: restarted
  tags:
    - manage
    - manage:start  
