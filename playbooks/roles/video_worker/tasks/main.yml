---
#
# edX Configuration
#
# github:     https://github.com/edx/configuration
# wiki:       https://openedx.atlassian.net/wiki/display/OpenOPS
# code style: https://openedx.atlassian.net/wiki/display/OpenOPS/Ansible+Code+Conventions
# license:    https://github.com/edx/configuration/blob/master/LICENSE.TXT
#
# Tasks for role video_worker.
#

- name: install application requirements
  pip:
    requirements: '{{ video_worker_code_dir }}/requirements.txt'
    virtualenv: '{{ video_worker_venv }}'
    state: present
  become_user: '{{ video_worker_user }}'
  tags:
    - install
    - install:app-requirements

- name: write out the supervisor wrapper
  template:
    src: edx/app/video_worker/video_worker.sh.j2
    dest: '{{ video_worker_home }}/{{ video_worker_service_name }}.sh'
    mode: 0650
    owner: '{{ supervisor_user }}'
    group: '{{ common_web_user }}'
  tags:
    - install
    - install:configuration

- name: write video worker supervisord config
  template:
    src: edx/app/supervisor/conf.d.available/video_worker.conf.j2
    dest: '{{ supervisor_available_dir }}/{{ video_worker_service_name }}.conf'
    owner: '{{ supervisor_user }}'
    group: '{{ common_web_user }}'
    mode: 0644
  tags:
    - install
    - install:configuration

- name: setup the video_worker env file
  template:
    src: "edx/app/video_worker/video_worker_env.j2"
    dest: "{{ edx_django_service_home }}/{{ edx_django_service_name }}_env"
    owner: "{{ edx_django_service_user }}"
    group: "{{ edx_django_service_user }}"
    mode: 0644
  tags:
    - install
    - install:configuration

- name: enable supervisor script
  file:
    src: '{{ supervisor_available_dir }}/{{ video_worker_service_name }}.conf'
    dest: '{{ supervisor_cfg_dir }}/{{ video_worker_service_name }}.conf'
    state: link
    force: yes
  when: not disable_edx_services
  tags:
    - install
    - install:configuration

- name: update supervisor configuration
  shell: '{{ supervisor_ctl }} -c {{ supervisor_cfg }} update'
  when: not disable_edx_services
  tags:
    - manage
    - manage:start

- name: create symlinks from the venv bin dir
  file:
    src: '{{ video_worker_venv_bin }}/{{ item }}'
    dest: '{{ COMMON_BIN_DIR }}/{{ item }}.video_worker'
    state: link
  with_items:
  - python
  - pip
  tags:
    - install
    - install:app-requirements

- name: restart the applicaton
  supervisorctl:
    state: restarted
    supervisorctl_path: '{{ supervisor_ctl }}'
    config: '{{ supervisor_cfg }}'
    name: '{{ video_worker_service_name }}'
  when: not disable_edx_services
  become_user: '{{ supervisor_service_user }}'
  tags:
    - manage
    - manage:start
