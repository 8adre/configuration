---
#
# edX Configuration
#
# github:     https://github.com/edx/configuration
# wiki:       https://openedx.atlassian.net/wiki/display/OpenOPS
# code style: https://openedx.atlassian.net/wiki/display/OpenOPS/Ansible+Code+Conventions
# license:    https://github.com/edx/configuration/blob/master/LICENSE.TXT
#
# Defaults for role video_worker.
#


video_worker_service_name: 'video_worker'
video_worker_user: '{{ video_worker_service_name }}'
video_worker_home: '{{ COMMON_APP_DIR }}/{{ video_worker_service_name }}'
video_worker_code_dir: '{{ video_worker_home }}/{{ video_worker_service_name }}'
video_worker_venv: '{{ video_worker_home }}/venvs/{{ video_worker_service_name }}'
video_worker_venv_bin: '{{ video_worker_home }}/venvs/{{ video_worker_service_name }}/bin'
video_worker_log_dir: '{{ COMMON_LOG_DIR }}/{{ video_worker_service_name }}'

video_worker_environment:
  PATH: '{{ video_worker_venv_bin }}:{{ ansible_env.PATH }}'
  VIDEO_WORKER_CFG: "{{ COMMON_CFG_DIR }}/{{ video_worker_service_name }}.yml"
  PYTHONPATH: "{{ video_worker_code_dir }}"

VIDEO_WORKER_GIT_IDENTITY: !!null
VIDEO_WORKER_VERSION: 'master'

VIDEO_WORKER_REPOS:
  - PROTOCOL: '{{ COMMON_GIT_PROTOCOL }}'
    DOMAIN: '{{ COMMON_GIT_MIRROR }}'
    PATH: '{{ COMMON_GIT_PATH }}'
    REPO: edx-video-worker.git
    VERSION: '{{ VIDEO_WORKER_VERSION }}'
    DESTINATION: '{{ video_worker_code_dir }}'
    SSH_KEY: '{{ VIDEO_WORKER_GIT_IDENTITY }}'

# Requires that New Relic be enabled via COMMON_ENABLE_NEWRELIC, and that
# a key be provided via NEWRELIC_LICENSE_KEY.
VIDEO_WORKER_NEWRELIC_APPNAME: '{{ COMMON_ENVIRONMENT }}-{{ COMMON_DEPLOYMENT }}-{{ video_worker_service_name }}'

VIDEO_WORKER_BROKER_USERNAME: 'video-worker'
VIDEO_WORKER_BROKER_PASSWORD: 'video-worker'
VIDEO_WORKER_BROKER_HOST: 'localhost'

VIDEO_WORKER_CONCURRENCY: 'SET-ME-PLEASE'
VIDEO_WORKER_QUEUES: 'SET-ME-PLEASE'

# OS packages
VIDEO_WORKER_DEBIAN_PKGS: ['ffmpeg']

# config defaults

VIDEO_WORKER_EDX_S3_ENDPOINT_BUCKET: "SET-ME-PLEASE"
VIDEO_WORKER_AWS_VIDEO_IMAGES_BUCKET: "SET-ME-PLEASE"
VIDEO_WORKER_VEDA_S3_HOTSTORE_BUCKET: "SET-ME-PLEASE"
VIDEO_WORKER_VEDA_DELIVERABLE_BUCKET: "SET-ME-PLEASE"
VEDA_BASE_URL: "{{ VIDEO_PIPELINE_URL_ROOT }}"
VIDEO_WORKER_VEDA_API_URL: "{{ VEDA_BASE_URL }}/api"
VIDEO_WORKER_VEDA_OAUTH_URL: "{{ VEDA_BASE_URL }}/veda_auth"
VIDEO_WORKER_VEDA_OAUTH_TOKEN_URL: "{{ VEDA_BASE_URL }}/o/token"
VIDEO_WORKER_VEDA_OAUTH_CLIENT_ID: "veda-client-id"
VIDEO_WORKER_VEDA_OAUTH_CLIENT_SECRET: "veda-client-secret"
VAL_BASE_URL: "http://127.0.0.1:8010"
VIDEO_WORKER_VAL_API_URL: "{{ VAL_BASE_URL }}/api/val/v0/videos"
VIDEO_WORKER_VAL_TOKEN_URL: "{{ VAL_BASE_URL }}/oauth2/access_token"
VIDEO_WORKER_VAL_VIDEO_IMAGES_URL: "{{ VAL_BASE_URL }}/api/val/v0/videos/video-images/update/"
VIDEO_WORKER_VAL_CLIENT_ID: "{{ VEDA_SOCIAL_AUTH_EDX_OIDC_KEY }}"
VIDEO_WORKER_VAL_SECRET_KEY: "{{ VEDA_SOCIAL_AUTH_EDX_OIDC_SECRET }}"
VIDEO_WORKER_VAL_USERNAME: "staff"
VIDEO_WORKER_VAL_PASSWORD: "edx"
VIDEO_WORKER_HOST_ENVIRONMENT: "sandbox"
VIDEO_WORKER_RABBITMQ_BROKER: "localhost"
VIDEO_WORKER_RABBITMQ_PASS: "pipeline"
VIDEO_WORKER_RABBITMQ_USER: "pipeline"

# video worker config

VIDEO_WORKER_CONFIG:
  edx_s3_endpoint_bucket: '{{ VIDEO_WORKER_EDX_S3_ENDPOINT_BUCKET }}'

  aws_video_images_bucket: '{{ VIDEO_WORKER_AWS_VIDEO_IMAGES_BUCKET }}'
  aws_video_images_prefix: "video-images/"

  veda_s3_hotstore_bucket: '{{ VIDEO_WORKER_VEDA_S3_HOTSTORE_BUCKET }}'
  veda_deliverable_bucket: '{{ VIDEO_WORKER_VEDA_DELIVERABLE_BUCKET }}'
  multi_upload_barrier: 2000000000

  # ---
  # VEDA API
  # ---
  veda_api_url: '{{ VIDEO_WORKER_VEDA_API_URL }}'
  veda_auth_url: '{{ VIDEO_WORKER_VEDA_OAUTH_URL }}'
  veda_client_id: '{{ VIDEO_WORKER_VEDA_OAUTH_CLIENT_ID }}'
  veda_secret_key: '{{ VIDEO_WORKER_VEDA_OAUTH_CLIENT_SECRET }}'
  veda_token_url: '{{ VIDEO_WORKER_VEDA_OAUTH_TOKEN_URL }}'

  # ---
  # VAL
  # ---
  val_api_url: '{{ VIDEO_WORKER_VAL_API_URL }}'
  val_token_url: '{{ VIDEO_WORKER_VAL_TOKEN_URL }}'
  val_video_images_url: '{{ VIDEO_WORKER_VAL_VIDEO_IMAGES_URL }}'
  # Credentials
  val_client_id: '{{ VIDEO_WORKER_VAL_CLIENT_ID }}'
  val_secret_key: '{{ VIDEO_WORKER_VAL_SECRET_KEY }}'
  val_password: '{{ VIDEO_WORKER_VAL_PASSWORD }}'
  val_username: '{{ VIDEO_WORKER_VAL_USERNAME }}'

  # ---
  # Celery Info
  # ---
  celery_app_name: 'veda_{{ VIDEO_WORKER_HOST_ENVIRONMENT }}'
  celery_worker_queue: encode_worker
  celery_threads: 1

  rabbitmq_broker: '{{ VIDEO_WORKER_RABBITMQ_BROKER }}'
  rabbitmq_pass: '{{ VIDEO_WORKER_RABBITMQ_PASS }}'
  rabbitmq_user: '{{ VIDEO_WORKER_RABBITMQ_USER }}'

  ## Encoding Config
  ffmpeg_compiled: "ffmpeg"
  target_aspect_ratio: 1.7777778
