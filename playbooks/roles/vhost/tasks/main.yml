---
#
# edX Configuration
#
# github:     https://github.com/edx/configuration
# wiki:       https://openedx.atlassian.net/wiki/display/OpenOPS
# code style: https://openedx.atlassian.net/wiki/display/OpenOPS/Ansible+Code+Conventions
# license:    https://github.com/edx/configuration/blob/master/LICENSE.TXT
#
#
#
# Tasks for role vhost
#
# Overview:
#
# This task is to contain tasks that should be run in vhost
# vitualation environments like AWS and Vagrant, but not in
# containers.  You typically would not run this role
# independently
#
# Dependencies:
# - common
#

- name: Create all service directories
  file:
    path: "{{ item.value.path }}"
    state: directory
    owner: "{{ item.value.owner }}"
    group: "{{ item.value.group }}"
    mode: "{{ item.value.mode }}"
  with_dict: "{{ vhost_dirs }}"

- name: Force logrotate on supervisor stop
  template:
    src: etc/init/sync-on-stop.conf.j2
    dest: /etc/init/sync-on-stop.conf
    owner: root
    group: root
    mode: 0644
  when: COMMON_OBJECT_STORE_LOG_SYNC

- name: Update /etc/dhcp/dhclient.conf
  template:
    src: etc/dhcp/dhclient.conf.j2
    dest: /etc/dhcp/dhclient.conf
  when: COMMON_CUSTOM_DHCLIENT_CONFIG

- name: Rerun dhclient to apply template
  shell: dhclient -n
  when: COMMON_CUSTOM_DHCLIENT_CONFIG

- name: Copy the MOTD template in place
  template:
    src: etc/motd.tail.j2
    dest: /etc/motd.tail
    owner: root
    group: root
    mode: '755'

- name: Add motd.tail support for 16.04
  copy:
    dest: "/etc/update-motd.d/75-motd-tail"
    content: "#!/bin/sh\necho\ncat /etc/motd.tail\n"
    force: true
    owner: root
    group: root
    mode: "0755"
  when: ansible_distribution_release == 'xenial'

- name: Update sshd logging to VERBOSE
  lineinfile:
    dest: /etc/ssh/sshd_config
    state: present
    regexp: "^LogLevel .*"
    line: "LogLevel VERBOSE"
  register: sshd_config_line1

- name: Update sshd password authentication
  lineinfile:
    dest: /etc/ssh/sshd_config
    state: present
    regexp: "^PasswordAuthentication .*"
    line: "PasswordAuthentication {{ COMMON_SSH_PASSWORD_AUTH }}"
  register: sshd_config_line2

- name: secure ssh algorithms
  lineinfile:
    name: /etc/ssh/sshd_config
    regexp: '^KexAlgorithms'
    insertafter: '^ServerKeyBits'
    line: 'KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256'
  tags:
    - install
    - install:base

- name: secure ssh Ciphers
  lineinfile:
    name: /etc/ssh/sshd_config
    regexp: '^Ciphers'
    insertafter: '^KexAlgorithms'
    line: 'Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr'
  tags:
    - install
    - install:base

- name: secure ssh MACs
  lineinfile:
    name: /etc/ssh/sshd_config
    regexp: '^MACs'
    insertafter: '^Ciphers'
    line: 'MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-ripemd160-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,hmac-ripemd160,umac-128@openssh.com'
  tags:
    - install
    - install:base

- name: enable public key authentication
  lineinfile:
    name: /etc/ssh/sshd_config
    regexp: '^PubkeyAuthentication'
    insertafter: '^#PubkeyAuthentication'
    line: 'PubkeyAuthentication yes'
  tags:
    - install
    - install:base

- name: disable dsa keys
  lineinfile:
    name: /etc/ssh/sshd_config
    regexp: '^HostKey .*dsa_key$'
    state: absent
  tags:
    - install
    - install:base

- name: disable Challenge Response
  lineinfile:
    name: /etc/ssh/sshd_config
    regexp: '^ChallengeResponseAuthentication'
    insertafter: '^#ChallengeResponseAuthentication'
    line: 'ChallengeResponseAuthentication no'
  tags:
    - install
    - install:base

- name: Restart ssh
  service:
    name: ssh
    state: restarted
  become: True
  tags:
    - install
    - install:base
  when: >
    ansible_distribution in common_debian_variants

- name: Restart ssh
  service:
    name: sshd
    state: restarted
  become: True
  when: >
    ansible_distribution in common_redhat_variants
